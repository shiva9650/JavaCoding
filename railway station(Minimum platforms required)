Problem statement :
Given schedule of trains and their stoppage time at a Railway Station, find minimum number of platforms needed.
Note -
If Train A's departure time is x and Train B's arrival time is x, then we can't accommodate Train B on the same platform as Train A.

Constraints
1 <= N <= 10^5
0 <= a <= 86400
0 < b <= 86400
Number of platforms > 0

Input
First line contains N denoting number of trains.
Next N line contain 2 integers, a and b, denoting the arrival time and stoppage time of train.

Output
Single integer denoting the minimum numbers of platforms needed to accommodate every train.

Time Limit
1

Examples : 
Example - 1
Input :
3
10 2
5 10
13 5

Output : 2

Explanation:
The earliest arriving train at time t = 5 will arrive at platform# 1. Since it will stay there till t = 15, train arriving at time t = 10 will arrive at platform# 2. Since it will depart at time t = 12, train arriving at time t = 13 will arrive at platform# 2.

Example - 2
Input :
2
2 4
6 2

Output : 2

Explanation
Platform #1 can accommodate train 1.
Platform #2 can accommodate train 2.

Solution : 

class Railway { 
	
	public static void main(String[] args)
	{   
		
		int p = 1, res = 1, i = 1, j = 0;
		Scanner sc = new Scanner(System.in);
		int N = sc.nextInt(), d;
		
		
		int arr[] = new int[N]; 
		int dep[] = new int[N];
		for(int k =0; k < N; k++)
		{
			arr[k] = sc.nextInt();
			d = sc.nextInt();
			dep[k] = arr[k] + d;
		}
		Arrays.sort(arr); 
		Arrays.sort(dep);  
		
		while (i < N && j < N) 
		{ 

			if (arr[i] <= dep[j]) { 
				p++; 
				i++; 
			} 

			else if (arr[i] > dep[j]) { 
				p--; 
				j++; 
			} 

			if (p > res) 
			{	res = p; }
			
		}
		System.out.println(res);
	}
}
Note that the departure of train 1 is same as arrival of train 2, i.e. 6, and thus we need a separate platform to accommodate train 2.
